buildscript {
	repositories {
		mavenCentral() 
	}
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

checkstyle {
	toolVersion = '6.7'
	ignoreFailures = true
	configFile = rootProject.file('src/main/resources/sun_checks.xml')
}

findbugs{
	ignoreFailures = true
	findbugsTest.enabled=false
}

tasks.withType(FindBugs) {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

pmd {
	ignoreFailures = true
	pmdTest.enabled=false
}

tasks.withType(Pmd){
	reports{
		xml.enabled=true
		html.enabled=true
	}
}

jacoco {
	toolVersion = "0.7.2.201409121644"
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.8
//version = '1.0'

apply from: "./versioning.gradle"

repositories { 
	mavenCentral() 
}

ext {
	if(project.hasProperty('env')) {
		profile = project['env']
	} else {
		profile = 'dev'
	}
	
	println "----->env is set to [${profile}]"
}

sourceSets {
	main{
		java{
			srcDir 'src/main/java' 
		}
	}
	integration {
		java {
			srcDir 'src/integration/java'
		}
		resources {
			srcDir "src/integration/resources/envs/${profile}"
		}
		compileClasspath += sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
	}
}

configurations {
	// exclude other concrete loggers so everything goes through log4j2
	all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
	all*.exclude group: "commons-logging", module: "commons-logging"
	all*.exclude group: "log4j", module: "log4j"
}


dependencies {
compile 'org.springframework:spring-webmvc:4.2.8.RELEASE'
	compile 'org.springframework:spring-aop:4.2.8.RELEASE'
	compile 'org.springframework:spring-jdbc:4.2.8.RELEASE'
	compile 'org.springframework:spring-beans:4.2.8.RELEASE'
	compile 'org.springframework:spring-context:4.2.8.RELEASE'
	compile 'org.springframework.security:spring-security-crypto:4.1.3.RELEASE'
	compile 'org.springframework.social:spring-social-core:1.1.4.RELEASE'
	compile 'org.springframework.data:spring-data-redis:1.7.4.RELEASE'
    compile 'org.apache.logging.log4j:log4j-api:2.0'
    compile 'org.apache.logging.log4j:log4j-core:2.0'
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.5.4'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.4'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.4'
    compile 'redis.clients:jedis:2.6.2'
    compile 'com.google.guava:guava:18.0'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-collections:commons-collections:3.2.1'
	compile 'commons-beanutils:commons-beanutils:1.9.2'
	compile 'org.aspectj:aspectjrt:1.8.2'
	compile 'org.apache.httpcomponents:httpclient:4.3.6'
	runtime 'org.aspectj:aspectjweaver:1.8.2'
	compile 'org.mybatis:mybatis:3.2.8'
	compile 'org.mybatis:mybatis-spring:1.2.2'
	compile 'org.postgresql:postgresql:9.4-1201-jdbc41'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    testCompile 'org.springframework:spring-test:4.2.8.RELEASE'
	testCompile 'com.github.springtestdbunit:spring-test-dbunit:1.2.0'
}

processResources {
	exclude 'envs'
}

war {
	
	archiveName "xpay.war"
	
	from('.') {
		include "version.txt"
		if(profile!='prod'){
			include "spec.html"
		}
	}
	
	webInf {
		from("./src/main/resource/${profile}/") {
			include '*.config'
			into './classes'
		}
	}
	
//	webXml = file("./src/main/resources/envs/${profile}/web.xml")
}

build.dependsOn jacocoTestReport
